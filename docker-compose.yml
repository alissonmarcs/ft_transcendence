services:
  auth-service:
    container_name: auth-service
    build: ./services/auth-service
    ports:
      - "3001:3001"
    volumes:
      - ./services/auth-service:/app
    env_file:
      - ./.env
    environment:
      - DB_PATH=${AUTH_DB_PATH}
      - MAIL_USER=${AUTH_MAIL_USER}
      - MAIL_PASS=${AUTH_MAIL_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - IP=${IP}
    command: ./start.sh
    networks:
      - backend

  match-service:
    container_name: match-service
    build: ./services/match-service
    ports:
      - "3002:3002"
    volumes:
      - ./services/match-service:/app
    env_file:
      - ./.env
    environment:
      - DB_PATH=${MATCH_DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
      - IP=${IP}
    command: ./start.sh
    networks:
      - backend

  user-service:
    container_name: user-service
    build: ./services/user-service
    ports:
      - "3003:3003"
    env_file:
      - ./.env
    environment:
      - DB_PATH=${USER_DB_PATH}
      - JWT_SECRET=${JWT_SECRET}
      - IP=${IP}
    volumes:
      - ./services/user-service:/app
    command: ./start.sh
    networks:
      - backend

  game-service:
    container_name: game-service
    build: ./services/game-service
    ports:
      - "3004:3004"
    volumes:
      - ./services/game-service:/app
    env_file:
      - ./.env
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - IP=${IP}
    command: ./start.sh
    networks:
      - backend
    
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
    env_file:
      - ./.env
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - IP=${IP}
    command: ./start.sh
    networks:
      - backend

networks:
  backend:
    name: backend
    driver: bridge
